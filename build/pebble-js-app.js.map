{"version":3,"sources":["webpack/bootstrap a86d5d94022f9fe0fc4d","/Users/jkeller/Library/Application Support/Pebble SDK/SDKs/4.3/sdk-core/pebble/common/include/_pkjs_shared_additions.js","./src/pkjs/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,EAAC;;;;;;;ACnBD;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA,EAAC,EAAE;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,yB;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA","file":"pebble-js-app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a86d5d94022f9fe0fc4d","(function(p) {\n  if (!p === undefined) {\n    console.error('Pebble object not found!?');\n    return;\n  }\n\n  // Aliases:\n  p.on = p.addEventListener;\n  p.off = p.removeEventListener;\n\n  // For Android (WebView-based) pkjs, print stacktrace for uncaught errors:\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('error', function(event) {\n      if (event.error && event.error.stack) {\n        console.error('' + event.error + '\\n' + event.error.stack);\n      }\n    });\n  }\n\n})(Pebble);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jkeller/Library/Application Support/Pebble SDK/SDKs/4.3/sdk-core/pebble/common/include/_pkjs_shared_additions.js\n// module id = 1\n// module chunks = 0","Pebble.addEventListener('ready', function() {\n    // PebbleKit JS is ready!\n    console.log('PebbleKit JS ready!');\n});\n\n/*Pebble.addEventListener('appmessage', function(e) {\n    var dict = e.payload;\n    console.log('Received message from pebble: ' + JSON.stringify(dict));\n    navigator.geolocation.getCurrentPosition(nav_success, nav_error, options);\n});*/\n\nvar watchId;\n\nvar loc = {\n    'latitude' : 0,\n    'longitude' : 0,\n    'distance' : 0\n};\nvar lats = [0.0,0.0,0.0]\nvar lons = [0.0,0.0,0.0]\nvar target = {\n    'latitude' : 42.400230,\n    'longitude' :  -71.116427\n};\nvar cur_distance = 0;\nvar msg = 'cold';\nvar colder_count = 0;\nvar warmer_count = 0;\n// Choose options about the data returned\nvar options = {\n    enableHighAccuracy: true,\n    maximumAge: 10000,\n    timeout: 10000\n};\n\nfunction avg(arr) {\n    var sum, i;\n    sum = 0.0;\n    for (i = 0; i < arr.length; i++) {\n        sum = sum + arr[i];\n    }\n    return sum/arr.length;\n}\n\nfunction update(arr, val){\n    arr.push(val);\n    return arr.splice(0,1);\n}\n\nfunction current_state(distance) {\n    if (distance > 1000.0) {\n        return 'cold';\n    } else if (distance < 1000.0 && distance > 100.0) {\n        return 'warm';\n    } else if (distance < 100.0 && distance > 10.0) {\n        return 'hot';\n    } else if (distance < 10.0) {\n        return 'red hot, bar'\n    } else {\n        return 'wut';\n    }\n}\n\nfunction toRad(num) {\n    return num * Math.PI / 180;\n}\n\nfunction calculate_distance(x1_deg, y1_deg, x2_deg, y2_deg) {\n    var R = 6371000;\n    var dx_deg = x1_deg - x2_deg;\n    var dy_deg = y1_deg - y2_deg;\n    var dx = toRad(dx_deg);\n    var dy = toRad(dy_deg);\n    var x1 = toRad(x1_deg);\n    var x2 = toRad(x2_deg);\n    var a = Math.sin(dx/2) * Math.sin(dx/2) + \n        Math.cos(x1) * Math.cos(x2) * Math.sin(dy/2) * Math.sin(dy/2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    var d = R * c;\n    return d;\n}\n\nfunction init_success(pos) {\n    var lat = pos.coords.latitude;\n    var lon = pos.coords.longitude;\n    for (i = 0; i < 3; i++){\n        lats[i] = lat;\n        lons[i] = lon;\n    }\n    var distance = calculate_distance(lat, lon, target.latitude, target.longitude);\n    cur_distance = distance;\n    msg = current_state(distance);\n    loc = {\n        'latitude' : lat.toString().substring(0,5),\n        'longitude' : lon.toString().substring(0,5),\n        'distance' : distance.toString().substring(0,5),\n        'msg' : msg\n    };\n\n    Pebble.sendAppMessage(loc, function() {\n        console.log('Message sent successfully: ' + JSON.stringify(loc));\n    }, function(e) {\n        console.log('Message failed: ' + JSON.stringify(e));\n    });\n}\nfunction nav_success(pos) {\n    console.log('lat= ' + pos.coords.latitude + ' lon= ' + pos.coords.longitude);\n\n    //var lat = pos.coords.latitude.toString();\n    //var lon = pos.coords.longitude.toString();\n\n    //var lat_delta = lat - target.latitude;\n    //var lon_delta = lon - target.longitude;\n\n    var cur_avg_lat = avg(lats);\n    var cur_avg_lon = avg(lons); \n    var new_lats = update(lats.splice(), pos.coords.latitude);\n    var new_lons = update(lons.splice(), pos.coords.longitude);\n    var new_avg_lat = avg(new_lats);\n    var new_avg_lon = avg(new_lons);\n\n    var distance = calculate_distance(new_avg_lat, new_avg_lon, target.latitude, target.longitude);\n\n    console.log(\"Distance: \" + distance);\n    if (distance > cur_distance + 2.0 || colder_count > 0) {\n        msg = 'colder';\n        lats = new_lats;\n        lons = new_lons;\n        cur_distance = distance;\n        if (colder_count == 0) {\n            colder_count = 3;\n        } else{\n            colder_count--;\n        }\n        console.log('Got colder' + colder_count);\n    } else if (distance < cur_distance - 2.0 || warmer_count > 0) {\n        msg = 'warmer';\n        lats = new_lats;\n        lons = new_lons;\n        cur_distance = distance;\n        if (warmer_count == 0){\n            warmer_count = 3;\n        } else{\n            warmer_count--;\n        }\n        console.log('Got warmer' + warmer_count);\n    } else {\n        msg = current_state(cur_distance);\n        console.log('Stayed the same');\n        change_count = 0;\n    }\n   \n    var lat = avg(lats);\n    var lon = avg(lons); \n\n\n\n    loc = {\n        'latitude' : lat.toString().substring(0,8),\n        'longitude' : lon.toString().substring(0,8),\n        'distance' : (parseInt(cur_distance) % 100).toString().substring(0,8),\n        'msg' : msg\n    };\n\n    Pebble.sendAppMessage(loc, function() {\n        console.log('Message sent successfully: ' + JSON.stringify(loc));\n    }, function(e) {\n        console.log('Message failed: ' + JSON.stringify(e));\n    });\n}\n\nfunction nav_error(err) {\n    console.log('location error (' + err.code + '): ' + err.message);\n}\nnavigator.geolocation.getCurrentPosition(init_success, nav_error, options);\nwatchId = navigator.geolocation.watchPosition(nav_success, nav_error, options);\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pkjs/index.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}